---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.0
  name: buckets.bucket.backblaze.m.crossplane.io
spec:
  group: bucket.backblaze.m.crossplane.io
  names:
    categories:
    - crossplane
    - backblaze
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: Synced
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: External Name
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.atProvider.bucketName
      name: Bucket Name
      type: string
    - jsonPath: .spec.forProvider.region
      name: Region
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  bucketDeletionPolicy:
                    description: |-
                      BucketDeletionPolicy determines how buckets should be deleted when Bucket is deleted.
                       `DeleteIfEmpty` only deletes the bucket if the bucket is empty.
                       `DeleteAll` recursively deletes all objects in the bucket and then removes it.
                      To skip deletion of the bucket (orphan it) set `spec.deletionPolicy=Orphan`.
                    type: string
                  bucketName:
                    description: |-
                      BucketName is the name of the bucket to create.
                      Defaults to `metadata.name` if unset.
                      Cannot be changed after bucket is created.
                      Name must be acceptable by the S3 protocol, which follows RFC 1123.
                      Be aware that Backblaze B2 requires unique bucket names across the entire platform.
                    type: string
                  bucketType:
                    default: allPrivate
                    description: |-
                      BucketType defines the access level for the bucket.
                      allPrivate: Files in this bucket are private and require authorization to access
                      allPublic: Files in this bucket can be downloaded by anybody
                    enum:
                    - allPrivate
                    - allPublic
                    type: string
                  corsRules:
                    description: CorsRules defines Cross-Origin Resource Sharing rules
                      for the bucket.
                    items:
                      description: CorsRule defines Cross-Origin Resource Sharing
                        rules.
                      properties:
                        allowedHeaders:
                          description: AllowedHeaders lists the headers that can be
                            used in requests.
                          items:
                            type: string
                          type: array
                        allowedOperations:
                          description: |-
                            AllowedOperations lists the operations that are allowed.
                            Valid values: b2_download_file_by_id, b2_download_file_by_name, b2_upload_file, b2_upload_part
                          items:
                            type: string
                          type: array
                        allowedOrigins:
                          description: AllowedOrigins lists the origins that are allowed
                            to make requests.
                          items:
                            type: string
                          type: array
                        corsRuleName:
                          description: CorsRuleName is a name for this rule (for your
                            reference).
                          type: string
                        exposeHeaders:
                          description: ExposeHeaders lists headers that browsers are
                            allowed to access.
                          items:
                            type: string
                          type: array
                        maxAgeSeconds:
                          description: MaxAgeSeconds specifies how long browsers can
                            cache the CORS response.
                          type: integer
                      required:
                      - allowedHeaders
                      - allowedOperations
                      - allowedOrigins
                      - corsRuleName
                      type: object
                    type: array
                  lifecycleRules:
                    description: |-
                      LifecycleRules defines lifecycle rules for automatic file management.
                      This controls when files are automatically hidden or deleted.
                    items:
                      description: LifecycleRule defines automatic file lifecycle
                        management.
                      properties:
                        daysFromHidingToDeleting:
                          description: DaysFromHidingToDeleting specifies how many
                            days after hiding a file version it should be deleted.
                          type: integer
                        daysFromUploadingToHiding:
                          description: DaysFromUploadingToHiding specifies how many
                            days after uploading a file version it should be hidden.
                          type: integer
                        fileNamePrefix:
                          description: FileNamePrefix limits the rule to files whose
                            names start with this prefix.
                          type: string
                      type: object
                    type: array
                  region:
                    default: us-west-001
                    description: |-
                      Region is the name of the region where the bucket shall be created.
                      The region must be available in the Backblaze B2 service.
                      Cannot be changed after bucket is created.
                      Common regions: us-west-001, us-west-002, eu-central-003
                    type: string
                required:
                - region
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            type: object
          status:
            properties:
              atProvider:
                properties:
                  bucketID:
                    description: BucketID is the unique identifier assigned by Backblaze
                      B2.
                    type: string
                  bucketName:
                    description: BucketName is the name of the actual bucket.
                    type: string
                  bucketType:
                    description: BucketType reflects the current access level of the
                      bucket.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
